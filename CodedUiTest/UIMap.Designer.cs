// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUiTest
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// InitialTest - Use 'InitialTestParams' to pass parameters into this method.
        /// </summary>
        public void InitialTest()
        {

            // Go to web page 'https://localhost:44319/' using new browser instance
            this.UIHomePageWebAppInternWindow.LaunchUrl(new System.Uri(this.InitialTestParams.UIHomePageWebAppInternWindowUrl));
        }
        
        /// <summary>
        /// InitialAssert - Use 'InitialAssertExpectedValues' to pass parameters into this method.
        /// </summary>
        public void InitialAssert()
        {
            #region Variable Declarations
            HtmlDiv uIItseemslikeyouarenotPane = this.UIHomePageWebAppInternWindow.UIHomePageWebAppDocument.UIItseemslikeyouarenotPane;
            #endregion

            // Verify that the 'InnerText' property of 'It seems like you are not logged in.' pane contains 'not logged in'
            StringAssert.Contains(uIItseemslikeyouarenotPane.InnerText, this.InitialAssertExpectedValues.UIItseemslikeyouarenotPaneInnerText);
        }
        
        /// <summary>
        /// CantLoginWithoutAnyData
        /// </summary>
        public void CantLoginWithoutAnyData()
        {
            #region Variable Declarations
            HtmlHyperlink uILoginHyperlink = this.UIHomePageWebAppInternWindow.UIHomePageWebAppDocument.UILoginHyperlink;
            HtmlButton uILoginButton = this.UIHomePageWebAppInternWindow.UILoginWebAppDocument.UILoginButton;
            #endregion

            // Click 'Log in' link
            Mouse.Click(uILoginHyperlink, new Point(42, 26));

            // Click 'Log in' button
            Mouse.Click(uILoginButton, new Point(46, 23));
        }
        
        /// <summary>
        /// CantLoginWithoutAnyDataAssert - Use 'CantLoginWithoutAnyDataAssertExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CantLoginWithoutAnyDataAssert()
        {
            #region Variable Declarations
            HtmlCustom uITheEmailfieldisrequiCustom = this.UIHomePageWebAppInternWindow.UILoginWebAppDocument.UITheEmailfieldisrequiCustom;
            #endregion

            // Verify that the 'InnerText' property of 'The Email field is required.' custom control contains 'The Email field is required.'
            StringAssert.Contains(uITheEmailfieldisrequiCustom.InnerText, this.CantLoginWithoutAnyDataAssertExpectedValues.UITheEmailfieldisrequiCustomInnerText);
        }
        
        /// <summary>
        /// LoginWithProperValues - Use 'LoginWithProperValuesParams' to pass parameters into this method.
        /// </summary>
        public void LoginWithProperValues()
        {
            #region Variable Declarations
            HtmlHyperlink uILoginHyperlink = this.UIHomePageWebAppInternWindow.UIHomePageWebAppDocument.UILoginHyperlink;
            HtmlEdit uIEmailEdit = this.UIHomePageWebAppInternWindow.UILoginWebAppDocument.UIEmailEdit;
            HtmlEdit uIPasswordEdit = this.UIHomePageWebAppInternWindow.UILoginWebAppDocument.UIPasswordEdit;
            HtmlButton uILoginButton = this.UIHomePageWebAppInternWindow.UILoginWebAppDocument.UILoginButton;
            #endregion

            // Click 'Log in' link
            Mouse.Click(uILoginHyperlink, new Point(37, 28));

            // Type 'admin@admin.pl' in 'Email' text box
            uIEmailEdit.Text = this.LoginWithProperValuesParams.UIEmailEditText;

            // Type '{Tab}' in 'Email' text box
            Keyboard.SendKeys(uIEmailEdit, this.LoginWithProperValuesParams.UIEmailEditSendKeys, ModifierKeys.None);

            // Type '********' in 'Password' text box
            uIPasswordEdit.Password = this.LoginWithProperValuesParams.UIPasswordEditPassword;

            // Click 'Log in' button
            Mouse.Click(uILoginButton, new Point(53, 5));
        }
        
        /// <summary>
        /// LoginWithProperValuesAssert - Use 'LoginWithProperValuesAssertExpectedValues' to pass parameters into this method.
        /// </summary>
        public void LoginWithProperValuesAssert()
        {
            #region Variable Declarations
            HtmlDiv uIHelloadminadminplIhoPane = this.UIHomePageWebAppInternWindow.UIHomePageWebAppDocument.UIHelloadminadminplIhoPane;
            #endregion

            // Verify that the 'FriendlyName' property of 'Hello admin@admin.pl ! I hope you wil' pane contains 'Hello admin@admin.pl'
            StringAssert.Contains(uIHelloadminadminplIhoPane.FriendlyName, this.LoginWithProperValuesAssertExpectedValues.UIHelloadminadminplIhoPaneFriendlyName);
        }
        
        /// <summary>
        /// IsVisibleUserNameAfterLoginAssert - Use 'IsVisibleUserNameAfterLoginAssertExpectedValues' to pass parameters into this method.
        /// </summary>
        public void IsVisibleUserNameAfterLoginAssert()
        {
            #region Variable Declarations
            HtmlHyperlink uIHelloadminadminplHyperlink = this.UIHomePageWebAppInternWindow.UIHomePageWebAppDocument.UIHelloadminadminplHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'Hello admin@admin.pl!' link equals 'Hello admin@admin.pl!'
            Assert.AreEqual(this.IsVisibleUserNameAfterLoginAssertExpectedValues.UIHelloadminadminplHyperlinkInnerText, uIHelloadminadminplHyperlink.InnerText);
        }
        
        /// <summary>
        /// Logout
        /// </summary>
        public void Logout()
        {
            #region Variable Declarations
            HtmlButton uILogoutButton = this.UIHomePageWebAppInternWindow.UIHomePageWebAppDocument.UILogoutButton;
            #endregion

            // Click 'Log out' button
            Mouse.Click(uILogoutButton, new Point(52, 33));
        }
        
        /// <summary>
        /// ShouldSeeAllTabs - Use 'ShouldSeeAllTabsExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ShouldSeeAllTabs()
        {
            #region Variable Declarations
            HtmlDiv uIArtistsEmployeesSessPane = this.UIHomePageWebAppInternWindow.UIHomePageWebAppDocument.UIArtistsEmployeesSessPane;
            #endregion

            // Verify that the 'FriendlyName' property of 'Artists Employees Sessions' pane equals 'Artists Employees Sessions '
            Assert.AreEqual(this.ShouldSeeAllTabsExpectedValues.UIArtistsEmployeesSessPaneFriendlyName, uIArtistsEmployeesSessPane.FriendlyName);
        }
        
        /// <summary>
        /// ShouldNotShowTabsAssert - Use 'ShouldNotShowTabsAssertExpectedValues' to pass parameters into this method.
        /// </summary>
        public void ShouldNotShowTabsAssert()
        {
            #region Variable Declarations
            HtmlDiv uIRegisterLoginPane = this.UIHomePageWebAppInternWindow.UIHomePageWebAppDocument.UIRegisterLoginPane;
            #endregion

            // Verify that the 'DisplayText' property of 'Register Log in' pane equals '
            //Register
            //
            //
            //Log in'
            Assert.AreEqual(this.ShouldNotShowTabsAssertExpectedValues.UIRegisterLoginPaneDisplayText, uIRegisterLoginPane.DisplayText);
        }
        
        /// <summary>
        /// LoginWithProperValuesSimpleUser - Use 'LoginWithProperValuesSimpleUserParams' to pass parameters into this method.
        /// </summary>
        public void LoginWithProperValuesSimpleUser()
        {
            #region Variable Declarations
            HtmlHyperlink uILoginHyperlink = this.UIHomePageWebAppInternWindow.UIHomePageWebAppDocument.UILoginHyperlink;
            HtmlEdit uIEmailEdit = this.UIHomePageWebAppInternWindow.UILoginWebAppDocument.UIEmailEdit;
            HtmlEdit uIPasswordEdit = this.UIHomePageWebAppInternWindow.UILoginWebAppDocument.UIPasswordEdit;
            #endregion

            // Click 'Log in' link
            Mouse.Click(uILoginHyperlink, new Point(34, 30));

            // Type 'user@user.pl' in 'Email' text box
            uIEmailEdit.Text = this.LoginWithProperValuesSimpleUserParams.UIEmailEditText;

            // Type '{Tab}' in 'Email' text box
            Keyboard.SendKeys(uIEmailEdit, this.LoginWithProperValuesSimpleUserParams.UIEmailEditSendKeys, ModifierKeys.None);

            // Type '********' in 'Password' text box
            uIPasswordEdit.Password = this.LoginWithProperValuesSimpleUserParams.UIPasswordEditPassword;

            // Type '{Enter}' in 'Password' text box
            Keyboard.SendKeys(uIPasswordEdit, this.LoginWithProperValuesSimpleUserParams.UIPasswordEditSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// SimpleUserSeeOnlySessionTabAssert - Use 'SimpleUserSeeOnlySessionTabAssertExpectedValues' to pass parameters into this method.
        /// </summary>
        public void SimpleUserSeeOnlySessionTabAssert()
        {
            #region Variable Declarations
            HtmlDiv uISessionsHellouserusePane = this.UIHomePageWebAppInternWindow.UIHomePageWebAppDocument.UISessionsHellouserusePane;
            #endregion

            // Verify that the 'DisplayText' property of 'Sessions Hello user@user.pl! L' pane contains '
            //Sessions
            //
            //
            //
            //Hello user@user.pl!
            //
            //Log out '
            StringAssert.Contains(uISessionsHellouserusePane.DisplayText, this.SimpleUserSeeOnlySessionTabAssertExpectedValues.UISessionsHellouserusePaneDisplayText);
        }
        
        /// <summary>
        /// OpenEmployeesPage
        /// </summary>
        public void OpenEmployeesPage()
        {
            #region Variable Declarations
            HtmlHyperlink uIEmployeesHyperlink = this.UIHomePageWebAppInternWindow.UIHomePageWebAppDocument.UIEmployeesHyperlink;
            #endregion

            // Click 'Employees' link
            Mouse.Click(uIEmployeesHyperlink, new Point(69, 28));
        }
        
        /// <summary>
        /// OpenEmployeesPageAssert - Use 'OpenEmployeesPageAssertExpectedValues' to pass parameters into this method.
        /// </summary>
        public void OpenEmployeesPageAssert()
        {
            #region Variable Declarations
            HtmlDiv uIEmployeesCreateNewFiPane = this.UIEmployeesWebAppInterWindow.UIEmployeesWebAppDocument.UIEmployeesCreateNewFiPane;
            #endregion

            // Verify that the 'FriendlyName' property of 'Employees Create New Find:' pane contains 'Employees'
            StringAssert.Contains(uIEmployeesCreateNewFiPane.FriendlyName, this.OpenEmployeesPageAssertExpectedValues.UIEmployeesCreateNewFiPaneFriendlyName);
        }
        
        /// <summary>
        /// ClickOnAppName
        /// </summary>
        public void ClickOnAppName()
        {
            #region Variable Declarations
            HtmlHyperlink uIMusicStudioHyperlink = this.UIEmployeesWebAppInterWindow.UIEmployeesWebAppDocument.UIMusicStudioHyperlink;
            #endregion

            // Click 'Music Studio' link
            Mouse.Click(uIMusicStudioHyperlink, new Point(97, 31));
        }
        
        /// <summary>
        /// NavigateToAllTabs
        /// </summary>
        public void NavigateToAllTabs()
        {
            #region Variable Declarations
            HtmlHyperlink uIArtistsHyperlink = this.UIHomePageWebAppInternWindow.UIHomePageWebAppDocument.UIArtistsHyperlink;
            HtmlHyperlink uIEmployeesHyperlink = this.UIHomePageWebAppInternWindow1.UIArtistsWebAppDocument.UIEmployeesHyperlink;
            HtmlHyperlink uISessionsHyperlink = this.UIEmployeesWebAppInterWindow.UIEmployeesWebAppDocument.UISessionsHyperlink;
            HtmlHyperlink uIMusicStudioHyperlink = this.UIHomePageWebAppInternWindow2.UIIndexWebAppDocument.UIMusicStudioHyperlink;
            #endregion

            // Click 'Artists' link
            Mouse.Click(uIArtistsHyperlink, new Point(25, 30));

            // Click 'Employees' link
            Mouse.Click(uIEmployeesHyperlink, new Point(42, 27));

            // Click 'Sessions' link
            Mouse.Click(uISessionsHyperlink, new Point(73, 31));

            // Click 'Music Studio' link
            Mouse.Click(uIMusicStudioHyperlink, new Point(112, 18));
        }
        
        /// <summary>
        /// EmployeeCheckAllPages
        /// </summary>
        public void EmployeeCheckAllPages()
        {
            #region Variable Declarations
            HtmlHyperlink uICreateNewHyperlink = this.UIEmployeesWebAppInterWindow.UIEmployeesWebAppDocument.UICreateNewHyperlink;
            HtmlHyperlink uIBacktoListHyperlink = this.UIEmployeesWebAppInterWindow1.UICreateWebAppDocument.UIBacktoListHyperlink;
            HtmlHyperlink uIEditHyperlink = this.UIEmployeesWebAppInterWindow.UIEmployeesWebAppDocument.UIEditHyperlink;
            HtmlHyperlink uIBacktoListHyperlink1 = this.UIEmployeesWebAppInterWindow2.UIEditWebAppDocument.UIBacktoListHyperlink;
            HtmlHyperlink uIDetailsHyperlink = this.UIEmployeesWebAppInterWindow.UIEmployeesWebAppDocument.UIDetailsHyperlink;
            HtmlHyperlink uIBacktoListHyperlink2 = this.UIEmployeesWebAppInterWindow3.UIDetailsWebAppDocument.UIBacktoListHyperlink;
            HtmlHyperlink uIDeleteHyperlink = this.UIEmployeesWebAppInterWindow.UIEmployeesWebAppDocument.UIDeleteHyperlink;
            HtmlHyperlink uIBacktoListHyperlink3 = this.UIEmployeesWebAppInterWindow4.UIDeleteWebAppDocument.UIBacktoListHyperlink;
            #endregion

            // Click 'Create New' link
            Mouse.Click(uICreateNewHyperlink, new Point(35, 23));

            // Click 'Back to List' link
            Mouse.Click(uIBacktoListHyperlink, new Point(90, 16));

            // Click 'Edit' link
            Mouse.Click(uIEditHyperlink, new Point(23, 11));

            // Click 'Back to List' link
            Mouse.Click(uIBacktoListHyperlink1, new Point(82, 6));

            // Click 'Details' link
            Mouse.Click(uIDetailsHyperlink, new Point(47, 9));

            // Click 'Back to List' link
            Mouse.Click(uIBacktoListHyperlink2, new Point(47, 36));

            // Click 'Delete' link
            Mouse.Click(uIDeleteHyperlink, new Point(33, 14));

            // Click 'Back to List' link
            Mouse.Click(uIBacktoListHyperlink3, new Point(90, 38));
        }
        
        /// <summary>
        /// EmployeeCheckAllPagesAssert - Use 'EmployeeCheckAllPagesAssertExpectedValues' to pass parameters into this method.
        /// </summary>
        public void EmployeeCheckAllPagesAssert()
        {
            #region Variable Declarations
            HtmlDiv uICreateEmployeeNameSuPane = this.UIEmployeesWebAppInterWindow1.UICreateWebAppDocument.UICreateEmployeeNameSuPane;
            HtmlDiv uIEditEmployeeNameSurPane = this.UIEmployeesWebAppInterWindow2.UIEditWebAppDocument.UIEditEmployeeNameSurPane;
            HtmlDiv uIDetailsEmployeeNameKPane = this.UIEmployeesWebAppInterWindow3.UIDetailsWebAppDocument.UIDetailsEmployeeNameKPane;
            HtmlDiv uIDeleteAreyousureyouwPane = this.UIEmployeesWebAppInterWindow4.UIDeleteWebAppDocument.UIDeleteAreyousureyouwPane;
            #endregion

            // Verify that the 'DisplayText' property of 'Create Employee Name Su' pane contains 'Create
            //
            //Employee'
            StringAssert.Contains(uICreateEmployeeNameSuPane.DisplayText, this.EmployeeCheckAllPagesAssertExpectedValues.UICreateEmployeeNameSuPaneDisplayText);

            // Verify that the 'DisplayText' property of 'Edit Employee Name Sur' pane contains 'Edit
            //
            //Employee'
            StringAssert.Contains(uIEditEmployeeNameSurPane.DisplayText, this.EmployeeCheckAllPagesAssertExpectedValues.UIEditEmployeeNameSurPaneDisplayText);

            // Verify that the 'DisplayText' property of 'Details Employee Name Krystian S' pane contains 'Details
            //
            //
            //Employee'
            StringAssert.Contains(uIDetailsEmployeeNameKPane.DisplayText, this.EmployeeCheckAllPagesAssertExpectedValues.UIDetailsEmployeeNameKPaneDisplayText);

            // Verify that the 'DisplayText' property of 'Delete Are you sure you want to delet' pane contains 'Are you sure you want to delete Employee?'
            StringAssert.Contains(uIDeleteAreyousureyouwPane.DisplayText, this.EmployeeCheckAllPagesAssertExpectedValues.UIDeleteAreyousureyouwPaneDisplayText);
        }
        
        /// <summary>
        /// EmployeeCreateBackButton
        /// </summary>
        public void EmployeeCreateBackButton()
        {
            #region Variable Declarations
            HtmlHyperlink uICreateNewHyperlink = this.UIEmployeesWebAppInterWindow.UIEmployeesWebAppDocument.UICreateNewHyperlink;
            HtmlHyperlink uIBacktoListHyperlink = this.UIEmployeesWebAppInterWindow1.UICreateWebAppDocument.UIBacktoListHyperlink;
            #endregion

            // Click 'Create New' link
            Mouse.Click(uICreateNewHyperlink, new Point(22, 25));

            // Click 'Back to List' link
            Mouse.Click(uIBacktoListHyperlink, new Point(70, 17));
        }
        
        /// <summary>
        /// NavigateToCreateEmployee
        /// </summary>
        public void NavigateToCreateEmployee()
        {
            #region Variable Declarations
            HtmlHyperlink uICreateNewHyperlink = this.UIEmployeesWebAppInterWindow.UIEmployeesWebAppDocument.UICreateNewHyperlink;
            #endregion

            // Click 'Create New' link
            Mouse.Click(uICreateNewHyperlink, new Point(81, 24));
        }
        
        /// <summary>
        /// NavigateToCreateEmployeeAssert - Use 'NavigateToCreateEmployeeAssertExpectedValues' to pass parameters into this method.
        /// </summary>
        public void NavigateToCreateEmployeeAssert()
        {
            #region Variable Declarations
            HtmlDiv uICreateEmployeeNameSuPane = this.UIEmployeesWebAppInterWindow1.UICreateWebAppDocument.UICreateEmployeeNameSuPane;
            #endregion

            // Verify that the 'InnerText' property of 'Create Employee Name Su' pane contains 'Create
            //
            //Employee'
            StringAssert.Contains(uICreateEmployeeNameSuPane.InnerText, this.NavigateToCreateEmployeeAssertExpectedValues.UICreateEmployeeNameSuPaneInnerText);
        }
        
        /// <summary>
        /// NavigateToEditEmployee
        /// </summary>
        public void NavigateToEditEmployee()
        {
            #region Variable Declarations
            HtmlHyperlink uIEditHyperlink = this.UIEmployeesWebAppInterWindow.UIEmployeesWebAppDocument.UIEditHyperlink;
            #endregion

            // Click 'Edit' link
            Mouse.Click(uIEditHyperlink, new Point(22, 7));
        }
        
        /// <summary>
        /// NavigateToEditEmployeeAssert - Use 'NavigateToEditEmployeeAssertExpectedValues' to pass parameters into this method.
        /// </summary>
        public void NavigateToEditEmployeeAssert()
        {
            #region Variable Declarations
            HtmlDiv uIEditEmployeeNameSurPane = this.UIEmployeesWebAppInterWindow2.UIEditWebAppDocument.UIEditEmployeeNameSurPane;
            #endregion

            // Verify that the 'InnerText' property of 'Edit Employee Name Sur' pane contains 'Edit
            //
            //Employee'
            StringAssert.Contains(uIEditEmployeeNameSurPane.InnerText, this.NavigateToEditEmployeeAssertExpectedValues.UIEditEmployeeNameSurPaneInnerText);
        }
        
        /// <summary>
        /// NavigateToDetailsEmployee
        /// </summary>
        public void NavigateToDetailsEmployee()
        {
            #region Variable Declarations
            HtmlHyperlink uIDetailsHyperlink = this.UIEmployeesWebAppInterWindow.UIEmployeesWebAppDocument.UIDetailsHyperlink;
            #endregion

            // Click 'Details' link
            Mouse.Click(uIDetailsHyperlink, new Point(23, 19));
        }
        
        /// <summary>
        /// NavigateToDetailsEmployeeAssert - Use 'NavigateToDetailsEmployeeAssertExpectedValues' to pass parameters into this method.
        /// </summary>
        public void NavigateToDetailsEmployeeAssert()
        {
            #region Variable Declarations
            HtmlDiv uIDetailsEmployeeNameKPane = this.UIEmployeesWebAppInterWindow3.UIDetailsWebAppDocument.UIDetailsEmployeeNameKPane;
            #endregion

            // Verify that the 'InnerText' property of 'Details Employee Name Krystian S' pane equals 'Details
            //
            //
            //Employee'
            Assert.AreEqual(this.NavigateToDetailsEmployeeAssertExpectedValues.UIDetailsEmployeeNameKPaneInnerText, uIDetailsEmployeeNameKPane.InnerText);
        }
        
        /// <summary>
        /// NavigateToDeleteEmployee
        /// </summary>
        public void NavigateToDeleteEmployee()
        {
            #region Variable Declarations
            HtmlHyperlink uIDeleteHyperlink = this.UIEmployeesWebAppInterWindow.UIEmployeesWebAppDocument.UIDeleteHyperlink;
            #endregion

            // Click 'Delete' link
            Mouse.Click(uIDeleteHyperlink, new Point(11, 7));
        }
        
        /// <summary>
        /// NavigateToDeleteEmployeeAssert - Use 'NavigateToDeleteEmployeeAssertExpectedValues' to pass parameters into this method.
        /// </summary>
        public void NavigateToDeleteEmployeeAssert()
        {
            #region Variable Declarations
            HtmlDiv uIDeleteAreyousureyouwPane = this.UIEmployeesWebAppInterWindow4.UIDeleteWebAppDocument.UIDeleteAreyousureyouwPane;
            #endregion

            // Verify that the 'InnerText' property of 'Delete Are you sure you want to delet' pane contains 'Are you sure you want to delete Employee'
            StringAssert.Contains(uIDeleteAreyousureyouwPane.InnerText, this.NavigateToDeleteEmployeeAssertExpectedValues.UIDeleteAreyousureyouwPaneInnerText);
        }
        
        /// <summary>
        /// EmployeeBackToList
        /// </summary>
        public void EmployeeBackToList()
        {
            #region Variable Declarations
            HtmlHyperlink uIBacktoListHyperlink = this.UIEmployeesWebAppInterWindow1.UICreateWebAppDocument.UIBacktoListHyperlink;
            #endregion

            // Click 'Back to List' link
            Mouse.Click(uIBacktoListHyperlink, new Point(66, 26));
        }
        
        /// <summary>
        /// EmployeeNavigateToEditAssert - Use 'EmployeeNavigateToEditAssertExpectedValues' to pass parameters into this method.
        /// </summary>
        public void EmployeeNavigateToEditAssert()
        {
            #region Variable Declarations
            HtmlDiv uIDetailsEmployeeNameKPane = this.UIEmployeesWebAppInterWindow3.UIDetailsWebAppDocument.UIDetailsEmployeeNameKPane;
            #endregion

            // Verify that the 'InnerText' property of 'Details Employee Name Krystian S' pane contains 'Details
            //
            //
            //Employee'
            StringAssert.Contains(uIDetailsEmployeeNameKPane.InnerText, this.EmployeeNavigateToEditAssertExpectedValues.UIDetailsEmployeeNameKPaneInnerText);
        }
        
        #region Properties
        public virtual InitialTestParams InitialTestParams
        {
            get
            {
                if ((this.mInitialTestParams == null))
                {
                    this.mInitialTestParams = new InitialTestParams();
                }
                return this.mInitialTestParams;
            }
        }
        
        public virtual InitialAssertExpectedValues InitialAssertExpectedValues
        {
            get
            {
                if ((this.mInitialAssertExpectedValues == null))
                {
                    this.mInitialAssertExpectedValues = new InitialAssertExpectedValues();
                }
                return this.mInitialAssertExpectedValues;
            }
        }
        
        public virtual CantLoginWithoutAnyDataAssertExpectedValues CantLoginWithoutAnyDataAssertExpectedValues
        {
            get
            {
                if ((this.mCantLoginWithoutAnyDataAssertExpectedValues == null))
                {
                    this.mCantLoginWithoutAnyDataAssertExpectedValues = new CantLoginWithoutAnyDataAssertExpectedValues();
                }
                return this.mCantLoginWithoutAnyDataAssertExpectedValues;
            }
        }
        
        public virtual LoginWithProperValuesParams LoginWithProperValuesParams
        {
            get
            {
                if ((this.mLoginWithProperValuesParams == null))
                {
                    this.mLoginWithProperValuesParams = new LoginWithProperValuesParams();
                }
                return this.mLoginWithProperValuesParams;
            }
        }
        
        public virtual LoginWithProperValuesAssertExpectedValues LoginWithProperValuesAssertExpectedValues
        {
            get
            {
                if ((this.mLoginWithProperValuesAssertExpectedValues == null))
                {
                    this.mLoginWithProperValuesAssertExpectedValues = new LoginWithProperValuesAssertExpectedValues();
                }
                return this.mLoginWithProperValuesAssertExpectedValues;
            }
        }
        
        public virtual IsVisibleUserNameAfterLoginAssertExpectedValues IsVisibleUserNameAfterLoginAssertExpectedValues
        {
            get
            {
                if ((this.mIsVisibleUserNameAfterLoginAssertExpectedValues == null))
                {
                    this.mIsVisibleUserNameAfterLoginAssertExpectedValues = new IsVisibleUserNameAfterLoginAssertExpectedValues();
                }
                return this.mIsVisibleUserNameAfterLoginAssertExpectedValues;
            }
        }
        
        public virtual ShouldSeeAllTabsExpectedValues ShouldSeeAllTabsExpectedValues
        {
            get
            {
                if ((this.mShouldSeeAllTabsExpectedValues == null))
                {
                    this.mShouldSeeAllTabsExpectedValues = new ShouldSeeAllTabsExpectedValues();
                }
                return this.mShouldSeeAllTabsExpectedValues;
            }
        }
        
        public virtual ShouldNotShowTabsAssertExpectedValues ShouldNotShowTabsAssertExpectedValues
        {
            get
            {
                if ((this.mShouldNotShowTabsAssertExpectedValues == null))
                {
                    this.mShouldNotShowTabsAssertExpectedValues = new ShouldNotShowTabsAssertExpectedValues();
                }
                return this.mShouldNotShowTabsAssertExpectedValues;
            }
        }
        
        public virtual LoginWithProperValuesSimpleUserParams LoginWithProperValuesSimpleUserParams
        {
            get
            {
                if ((this.mLoginWithProperValuesSimpleUserParams == null))
                {
                    this.mLoginWithProperValuesSimpleUserParams = new LoginWithProperValuesSimpleUserParams();
                }
                return this.mLoginWithProperValuesSimpleUserParams;
            }
        }
        
        public virtual SimpleUserSeeOnlySessionTabAssertExpectedValues SimpleUserSeeOnlySessionTabAssertExpectedValues
        {
            get
            {
                if ((this.mSimpleUserSeeOnlySessionTabAssertExpectedValues == null))
                {
                    this.mSimpleUserSeeOnlySessionTabAssertExpectedValues = new SimpleUserSeeOnlySessionTabAssertExpectedValues();
                }
                return this.mSimpleUserSeeOnlySessionTabAssertExpectedValues;
            }
        }
        
        public virtual OpenEmployeesPageAssertExpectedValues OpenEmployeesPageAssertExpectedValues
        {
            get
            {
                if ((this.mOpenEmployeesPageAssertExpectedValues == null))
                {
                    this.mOpenEmployeesPageAssertExpectedValues = new OpenEmployeesPageAssertExpectedValues();
                }
                return this.mOpenEmployeesPageAssertExpectedValues;
            }
        }
        
        public virtual EmployeeCheckAllPagesAssertExpectedValues EmployeeCheckAllPagesAssertExpectedValues
        {
            get
            {
                if ((this.mEmployeeCheckAllPagesAssertExpectedValues == null))
                {
                    this.mEmployeeCheckAllPagesAssertExpectedValues = new EmployeeCheckAllPagesAssertExpectedValues();
                }
                return this.mEmployeeCheckAllPagesAssertExpectedValues;
            }
        }
        
        public virtual NavigateToCreateEmployeeAssertExpectedValues NavigateToCreateEmployeeAssertExpectedValues
        {
            get
            {
                if ((this.mNavigateToCreateEmployeeAssertExpectedValues == null))
                {
                    this.mNavigateToCreateEmployeeAssertExpectedValues = new NavigateToCreateEmployeeAssertExpectedValues();
                }
                return this.mNavigateToCreateEmployeeAssertExpectedValues;
            }
        }
        
        public virtual NavigateToEditEmployeeAssertExpectedValues NavigateToEditEmployeeAssertExpectedValues
        {
            get
            {
                if ((this.mNavigateToEditEmployeeAssertExpectedValues == null))
                {
                    this.mNavigateToEditEmployeeAssertExpectedValues = new NavigateToEditEmployeeAssertExpectedValues();
                }
                return this.mNavigateToEditEmployeeAssertExpectedValues;
            }
        }
        
        public virtual NavigateToDetailsEmployeeAssertExpectedValues NavigateToDetailsEmployeeAssertExpectedValues
        {
            get
            {
                if ((this.mNavigateToDetailsEmployeeAssertExpectedValues == null))
                {
                    this.mNavigateToDetailsEmployeeAssertExpectedValues = new NavigateToDetailsEmployeeAssertExpectedValues();
                }
                return this.mNavigateToDetailsEmployeeAssertExpectedValues;
            }
        }
        
        public virtual NavigateToDeleteEmployeeAssertExpectedValues NavigateToDeleteEmployeeAssertExpectedValues
        {
            get
            {
                if ((this.mNavigateToDeleteEmployeeAssertExpectedValues == null))
                {
                    this.mNavigateToDeleteEmployeeAssertExpectedValues = new NavigateToDeleteEmployeeAssertExpectedValues();
                }
                return this.mNavigateToDeleteEmployeeAssertExpectedValues;
            }
        }
        
        public virtual EmployeeNavigateToEditAssertExpectedValues EmployeeNavigateToEditAssertExpectedValues
        {
            get
            {
                if ((this.mEmployeeNavigateToEditAssertExpectedValues == null))
                {
                    this.mEmployeeNavigateToEditAssertExpectedValues = new EmployeeNavigateToEditAssertExpectedValues();
                }
                return this.mEmployeeNavigateToEditAssertExpectedValues;
            }
        }
        
        public UIHomePageWebAppInternWindow UIHomePageWebAppInternWindow
        {
            get
            {
                if ((this.mUIHomePageWebAppInternWindow == null))
                {
                    this.mUIHomePageWebAppInternWindow = new UIHomePageWebAppInternWindow();
                }
                return this.mUIHomePageWebAppInternWindow;
            }
        }
        
        public UIEmployeesWebAppInterWindow UIEmployeesWebAppInterWindow
        {
            get
            {
                if ((this.mUIEmployeesWebAppInterWindow == null))
                {
                    this.mUIEmployeesWebAppInterWindow = new UIEmployeesWebAppInterWindow();
                }
                return this.mUIEmployeesWebAppInterWindow;
            }
        }
        
        public UIHomePageWebAppInternWindow1 UIHomePageWebAppInternWindow1
        {
            get
            {
                if ((this.mUIHomePageWebAppInternWindow1 == null))
                {
                    this.mUIHomePageWebAppInternWindow1 = new UIHomePageWebAppInternWindow1();
                }
                return this.mUIHomePageWebAppInternWindow1;
            }
        }
        
        public UIHomePageWebAppInternWindow2 UIHomePageWebAppInternWindow2
        {
            get
            {
                if ((this.mUIHomePageWebAppInternWindow2 == null))
                {
                    this.mUIHomePageWebAppInternWindow2 = new UIHomePageWebAppInternWindow2();
                }
                return this.mUIHomePageWebAppInternWindow2;
            }
        }
        
        public UIEmployeesWebAppInterWindow1 UIEmployeesWebAppInterWindow1
        {
            get
            {
                if ((this.mUIEmployeesWebAppInterWindow1 == null))
                {
                    this.mUIEmployeesWebAppInterWindow1 = new UIEmployeesWebAppInterWindow1();
                }
                return this.mUIEmployeesWebAppInterWindow1;
            }
        }
        
        public UIEmployeesWebAppInterWindow2 UIEmployeesWebAppInterWindow2
        {
            get
            {
                if ((this.mUIEmployeesWebAppInterWindow2 == null))
                {
                    this.mUIEmployeesWebAppInterWindow2 = new UIEmployeesWebAppInterWindow2();
                }
                return this.mUIEmployeesWebAppInterWindow2;
            }
        }
        
        public UIEmployeesWebAppInterWindow3 UIEmployeesWebAppInterWindow3
        {
            get
            {
                if ((this.mUIEmployeesWebAppInterWindow3 == null))
                {
                    this.mUIEmployeesWebAppInterWindow3 = new UIEmployeesWebAppInterWindow3();
                }
                return this.mUIEmployeesWebAppInterWindow3;
            }
        }
        
        public UIEmployeesWebAppInterWindow4 UIEmployeesWebAppInterWindow4
        {
            get
            {
                if ((this.mUIEmployeesWebAppInterWindow4 == null))
                {
                    this.mUIEmployeesWebAppInterWindow4 = new UIEmployeesWebAppInterWindow4();
                }
                return this.mUIEmployeesWebAppInterWindow4;
            }
        }
        #endregion
        
        #region Fields
        private InitialTestParams mInitialTestParams;
        
        private InitialAssertExpectedValues mInitialAssertExpectedValues;
        
        private CantLoginWithoutAnyDataAssertExpectedValues mCantLoginWithoutAnyDataAssertExpectedValues;
        
        private LoginWithProperValuesParams mLoginWithProperValuesParams;
        
        private LoginWithProperValuesAssertExpectedValues mLoginWithProperValuesAssertExpectedValues;
        
        private IsVisibleUserNameAfterLoginAssertExpectedValues mIsVisibleUserNameAfterLoginAssertExpectedValues;
        
        private ShouldSeeAllTabsExpectedValues mShouldSeeAllTabsExpectedValues;
        
        private ShouldNotShowTabsAssertExpectedValues mShouldNotShowTabsAssertExpectedValues;
        
        private LoginWithProperValuesSimpleUserParams mLoginWithProperValuesSimpleUserParams;
        
        private SimpleUserSeeOnlySessionTabAssertExpectedValues mSimpleUserSeeOnlySessionTabAssertExpectedValues;
        
        private OpenEmployeesPageAssertExpectedValues mOpenEmployeesPageAssertExpectedValues;
        
        private EmployeeCheckAllPagesAssertExpectedValues mEmployeeCheckAllPagesAssertExpectedValues;
        
        private NavigateToCreateEmployeeAssertExpectedValues mNavigateToCreateEmployeeAssertExpectedValues;
        
        private NavigateToEditEmployeeAssertExpectedValues mNavigateToEditEmployeeAssertExpectedValues;
        
        private NavigateToDetailsEmployeeAssertExpectedValues mNavigateToDetailsEmployeeAssertExpectedValues;
        
        private NavigateToDeleteEmployeeAssertExpectedValues mNavigateToDeleteEmployeeAssertExpectedValues;
        
        private EmployeeNavigateToEditAssertExpectedValues mEmployeeNavigateToEditAssertExpectedValues;
        
        private UIHomePageWebAppInternWindow mUIHomePageWebAppInternWindow;
        
        private UIEmployeesWebAppInterWindow mUIEmployeesWebAppInterWindow;
        
        private UIHomePageWebAppInternWindow1 mUIHomePageWebAppInternWindow1;
        
        private UIHomePageWebAppInternWindow2 mUIHomePageWebAppInternWindow2;
        
        private UIEmployeesWebAppInterWindow1 mUIEmployeesWebAppInterWindow1;
        
        private UIEmployeesWebAppInterWindow2 mUIEmployeesWebAppInterWindow2;
        
        private UIEmployeesWebAppInterWindow3 mUIEmployeesWebAppInterWindow3;
        
        private UIEmployeesWebAppInterWindow4 mUIEmployeesWebAppInterWindow4;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'InitialTest'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class InitialTestParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'https://localhost:44319/' using new browser instance
        /// </summary>
        public string UIHomePageWebAppInternWindowUrl = "https://localhost:44319/";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'InitialAssert'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class InitialAssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'It seems like you are not logged in.' pane contains 'not logged in'
        /// </summary>
        public string UIItseemslikeyouarenotPaneInnerText = "not logged in";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CantLoginWithoutAnyDataAssert'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CantLoginWithoutAnyDataAssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'The Email field is required.' custom control contains 'The Email field is required.'
        /// </summary>
        public string UITheEmailfieldisrequiCustomInnerText = "The Email field is required.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'LoginWithProperValues'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class LoginWithProperValuesParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'admin@admin.pl' in 'Email' text box
        /// </summary>
        public string UIEmailEditText = "admin@admin.pl";
        
        /// <summary>
        /// Type '{Tab}' in 'Email' text box
        /// </summary>
        public string UIEmailEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '********' in 'Password' text box
        /// </summary>
        public string UIPasswordEditPassword = "pSZn1LLuI6vhujumbKjPOaCqMls5cyf9XCTZoOa734Y=";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'LoginWithProperValuesAssert'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class LoginWithProperValuesAssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'FriendlyName' property of 'Hello admin@admin.pl ! I hope you wil' pane contains 'Hello admin@admin.pl'
        /// </summary>
        public string UIHelloadminadminplIhoPaneFriendlyName = "Hello admin@admin.pl";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'IsVisibleUserNameAfterLoginAssert'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class IsVisibleUserNameAfterLoginAssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Hello admin@admin.pl!' link equals 'Hello admin@admin.pl!'
        /// </summary>
        public string UIHelloadminadminplHyperlinkInnerText = "Hello admin@admin.pl!";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ShouldSeeAllTabs'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class ShouldSeeAllTabsExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'FriendlyName' property of 'Artists Employees Sessions' pane equals 'Artists Employees Sessions '
        /// </summary>
        public string UIArtistsEmployeesSessPaneFriendlyName = "Artists Employees Sessions ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ShouldNotShowTabsAssert'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class ShouldNotShowTabsAssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Register Log in' pane equals '
        ///Register
        ///
        ///
        ///Log in'
        /// </summary>
        public string UIRegisterLoginPaneDisplayText = "\r\nRegister\r\n\r\n\r\nLog in";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'LoginWithProperValuesSimpleUser'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class LoginWithProperValuesSimpleUserParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'user@user.pl' in 'Email' text box
        /// </summary>
        public string UIEmailEditText = "user@user.pl";
        
        /// <summary>
        /// Type '{Tab}' in 'Email' text box
        /// </summary>
        public string UIEmailEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '********' in 'Password' text box
        /// </summary>
        public string UIPasswordEditPassword = "pSZn1LLuI6vhujumbKjPOaCqMls5cyf9XCTZoOa734Y=";
        
        /// <summary>
        /// Type '{Enter}' in 'Password' text box
        /// </summary>
        public string UIPasswordEditSendKeys = "{Enter}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SimpleUserSeeOnlySessionTabAssert'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class SimpleUserSeeOnlySessionTabAssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Sessions Hello user@user.pl! L' pane contains '
        ///Sessions
        ///
        ///
        ///
        ///Hello user@user.pl!
        ///
        ///Log out '
        /// </summary>
        public string UISessionsHellouserusePaneDisplayText = "\r\nSessions\r\n\r\n\r\n\r\nHello user@user.pl!\r\n\r\nLog out ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'OpenEmployeesPageAssert'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class OpenEmployeesPageAssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'FriendlyName' property of 'Employees Create New Find:' pane contains 'Employees'
        /// </summary>
        public string UIEmployeesCreateNewFiPaneFriendlyName = "Employees";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EmployeeCheckAllPagesAssert'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class EmployeeCheckAllPagesAssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Create Employee Name Su' pane contains 'Create
        ///
        ///Employee'
        /// </summary>
        public string UICreateEmployeeNameSuPaneDisplayText = "Create\r\n\r\nEmployee";
        
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Edit Employee Name Sur' pane contains 'Edit
        ///
        ///Employee'
        /// </summary>
        public string UIEditEmployeeNameSurPaneDisplayText = "Edit\r\n\r\nEmployee";
        
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Details Employee Name Krystian S' pane contains 'Details
        ///
        ///
        ///Employee'
        /// </summary>
        public string UIDetailsEmployeeNameKPaneDisplayText = "Details\r\n\r\n\r\nEmployee";
        
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Delete Are you sure you want to delet' pane contains 'Are you sure you want to delete Employee?'
        /// </summary>
        public string UIDeleteAreyousureyouwPaneDisplayText = "Are you sure you want to delete Employee?";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'NavigateToCreateEmployeeAssert'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class NavigateToCreateEmployeeAssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Create Employee Name Su' pane contains 'Create
        ///
        ///Employee'
        /// </summary>
        public string UICreateEmployeeNameSuPaneInnerText = "Create\r\n\r\nEmployee";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'NavigateToEditEmployeeAssert'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class NavigateToEditEmployeeAssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Edit Employee Name Sur' pane contains 'Edit
        ///
        ///Employee'
        /// </summary>
        public string UIEditEmployeeNameSurPaneInnerText = "Edit\r\n\r\nEmployee";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'NavigateToDetailsEmployeeAssert'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class NavigateToDetailsEmployeeAssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Details Employee Name Krystian S' pane equals 'Details
        ///
        ///
        ///Employee'
        /// </summary>
        public string UIDetailsEmployeeNameKPaneInnerText = "Details\r\n\r\n\r\nEmployee";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'NavigateToDeleteEmployeeAssert'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class NavigateToDeleteEmployeeAssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Delete Are you sure you want to delet' pane contains 'Are you sure you want to delete Employee'
        /// </summary>
        public string UIDeleteAreyousureyouwPaneInnerText = "Are you sure you want to delete Employee";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EmployeeNavigateToEditAssert'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class EmployeeNavigateToEditAssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Details Employee Name Krystian S' pane contains 'Details
        ///
        ///
        ///Employee'
        /// </summary>
        public string UIDetailsEmployeeNameKPaneInnerText = "Details\r\n\r\n\r\nEmployee";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIHomePageWebAppInternWindow : BrowserWindow
    {
        
        public UIHomePageWebAppInternWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Home Page - WebApp";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Home Page - WebApp");
            this.WindowTitles.Add("Log in - WebApp");
            this.WindowTitles.Add("Artists - WebApp");
            this.WindowTitles.Add("Employees - WebApp");
            this.WindowTitles.Add("Index - WebApp");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIHomePageWebAppDocument UIHomePageWebAppDocument
        {
            get
            {
                if ((this.mUIHomePageWebAppDocument == null))
                {
                    this.mUIHomePageWebAppDocument = new UIHomePageWebAppDocument(this);
                }
                return this.mUIHomePageWebAppDocument;
            }
        }
        
        public UILoginWebAppDocument UILoginWebAppDocument
        {
            get
            {
                if ((this.mUILoginWebAppDocument == null))
                {
                    this.mUILoginWebAppDocument = new UILoginWebAppDocument(this);
                }
                return this.mUILoginWebAppDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIHomePageWebAppDocument mUIHomePageWebAppDocument;
        
        private UILoginWebAppDocument mUILoginWebAppDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIHomePageWebAppDocument : HtmlDocument
    {
        
        public UIHomePageWebAppDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Home Page - WebApp";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost:44319/";
            this.WindowTitles.Add("Home Page - WebApp");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIItseemslikeyouarenotPane
        {
            get
            {
                if ((this.mUIItseemslikeyouarenotPane == null))
                {
                    this.mUIItseemslikeyouarenotPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItseemslikeyouarenotPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItseemslikeyouarenotPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItseemslikeyouarenotPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "It seems like you are not logged in.\r\n\r\n";
                    this.mUIItseemslikeyouarenotPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItseemslikeyouarenotPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "row";
                    this.mUIItseemslikeyouarenotPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"row\"";
                    this.mUIItseemslikeyouarenotPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "11";
                    this.mUIItseemslikeyouarenotPane.WindowTitles.Add("Home Page - WebApp");
                    #endregion
                }
                return this.mUIItseemslikeyouarenotPane;
            }
        }
        
        public HtmlHyperlink UILoginHyperlink
        {
            get
            {
                if ((this.mUILoginHyperlink == null))
                {
                    this.mUILoginHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUILoginHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "btnLogin";
                    this.mUILoginHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUILoginHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUILoginHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Log in";
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Account/Login";
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost:44319/Account/Login";
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=\"btnLogin\" href=\"/Account/Login\"";
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "3";
                    this.mUILoginHyperlink.WindowTitles.Add("Home Page - WebApp");
                    #endregion
                }
                return this.mUILoginHyperlink;
            }
        }
        
        public HtmlDiv UIHelloadminadminplIhoPane
        {
            get
            {
                if ((this.mUIHelloadminadminplIhoPane == null))
                {
                    this.mUIHelloadminadminplIhoPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIHelloadminadminplIhoPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIHelloadminadminplIhoPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIHelloadminadminplIhoPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Hello admin@admin.pl !\r\n\r\nI hope you wil";
                    this.mUIHelloadminadminplIhoPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIHelloadminadminplIhoPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "row";
                    this.mUIHelloadminadminplIhoPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"row\"";
                    this.mUIHelloadminadminplIhoPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "11";
                    this.mUIHelloadminadminplIhoPane.WindowTitles.Add("Home Page - WebApp");
                    #endregion
                }
                return this.mUIHelloadminadminplIhoPane;
            }
        }
        
        public HtmlHyperlink UIHelloadminadminplHyperlink
        {
            get
            {
                if ((this.mUIHelloadminadminplHyperlink == null))
                {
                    this.mUIHelloadminadminplHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIHelloadminadminplHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIHelloadminadminplHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = "userNameOptions";
                    this.mUIHelloadminadminplHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIHelloadminadminplHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Hello admin@admin.pl!";
                    this.mUIHelloadminadminplHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Manage/Index";
                    this.mUIHelloadminadminplHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = "Manage";
                    this.mUIHelloadminadminplHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost:44319/Manage/Index";
                    this.mUIHelloadminadminplHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIHelloadminadminplHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "name=\"userNameOptions\" title=\"Manage\" hr";
                    this.mUIHelloadminadminplHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "5";
                    this.mUIHelloadminadminplHyperlink.WindowTitles.Add("Home Page - WebApp");
                    #endregion
                }
                return this.mUIHelloadminadminplHyperlink;
            }
        }
        
        public HtmlButton UILogoutButton
        {
            get
            {
                if ((this.mUILogoutButton == null))
                {
                    this.mUILogoutButton = new HtmlButton(this);
                    #region Search Criteria
                    this.mUILogoutButton.SearchProperties[HtmlButton.PropertyNames.Id] = "btnLogOut";
                    this.mUILogoutButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUILogoutButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Log out";
                    this.mUILogoutButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUILogoutButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUILogoutButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-link navbar-btn navbar-link";
                    this.mUILogoutButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-link navbar-btn navbar-li";
                    this.mUILogoutButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "2";
                    this.mUILogoutButton.WindowTitles.Add("Home Page - WebApp");
                    #endregion
                }
                return this.mUILogoutButton;
            }
        }
        
        public HtmlDiv UIArtistsEmployeesSessPane
        {
            get
            {
                if ((this.mUIArtistsEmployeesSessPane == null))
                {
                    this.mUIArtistsEmployeesSessPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIArtistsEmployeesSessPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIArtistsEmployeesSessPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIArtistsEmployeesSessPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Artists\r\n\r\n\r\nEmployees\r\n\r\n\r\nSessions\r\n\r\n";
                    this.mUIArtistsEmployeesSessPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIArtistsEmployeesSessPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "navbar-collapse collapse";
                    this.mUIArtistsEmployeesSessPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"navbar-collapse collapse\"";
                    this.mUIArtistsEmployeesSessPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "3";
                    this.mUIArtistsEmployeesSessPane.WindowTitles.Add("Home Page - WebApp");
                    #endregion
                }
                return this.mUIArtistsEmployeesSessPane;
            }
        }
        
        public HtmlDiv UIRegisterLoginPane
        {
            get
            {
                if ((this.mUIRegisterLoginPane == null))
                {
                    this.mUIRegisterLoginPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIRegisterLoginPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIRegisterLoginPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIRegisterLoginPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Register\r\n\r\n\r\nLog in";
                    this.mUIRegisterLoginPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIRegisterLoginPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "navbar-collapse collapse";
                    this.mUIRegisterLoginPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"navbar-collapse collapse\"";
                    this.mUIRegisterLoginPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "3";
                    this.mUIRegisterLoginPane.WindowTitles.Add("Home Page - WebApp");
                    #endregion
                }
                return this.mUIRegisterLoginPane;
            }
        }
        
        public HtmlDiv UISessionsHellouserusePane
        {
            get
            {
                if ((this.mUISessionsHellouserusePane == null))
                {
                    this.mUISessionsHellouserusePane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUISessionsHellouserusePane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUISessionsHellouserusePane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUISessionsHellouserusePane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Sessions\r\n\r\n\r\n\r\nHello user@user.pl!\r\n\r\nL";
                    this.mUISessionsHellouserusePane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUISessionsHellouserusePane.FilterProperties[HtmlDiv.PropertyNames.Class] = "navbar-collapse collapse";
                    this.mUISessionsHellouserusePane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"navbar-collapse collapse\"";
                    this.mUISessionsHellouserusePane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "3";
                    this.mUISessionsHellouserusePane.WindowTitles.Add("Home Page - WebApp");
                    #endregion
                }
                return this.mUISessionsHellouserusePane;
            }
        }
        
        public HtmlHyperlink UIEmployeesHyperlink
        {
            get
            {
                if ((this.mUIEmployeesHyperlink == null))
                {
                    this.mUIEmployeesHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIEmployeesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "employeeSection";
                    this.mUIEmployeesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = "sections";
                    this.mUIEmployeesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIEmployeesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.InnerText] = "Employees";
                    this.mUIEmployeesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Employees";
                    this.mUIEmployeesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIEmployeesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost:44319/Employees";
                    this.mUIEmployeesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIEmployeesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "name=\"sections\" id=\"employeeSection\" hre";
                    this.mUIEmployeesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "3";
                    this.mUIEmployeesHyperlink.WindowTitles.Add("Home Page - WebApp");
                    #endregion
                }
                return this.mUIEmployeesHyperlink;
            }
        }
        
        public HtmlHyperlink UIArtistsHyperlink
        {
            get
            {
                if ((this.mUIArtistsHyperlink == null))
                {
                    this.mUIArtistsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIArtistsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "artistSection";
                    this.mUIArtistsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = "sections";
                    this.mUIArtistsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIArtistsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.InnerText] = "Artists";
                    this.mUIArtistsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Artists";
                    this.mUIArtistsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIArtistsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost:44319/Artists";
                    this.mUIArtistsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIArtistsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "name=\"sections\" id=\"artistSection\" href=";
                    this.mUIArtistsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIArtistsHyperlink.WindowTitles.Add("Home Page - WebApp");
                    #endregion
                }
                return this.mUIArtistsHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIItseemslikeyouarenotPane;
        
        private HtmlHyperlink mUILoginHyperlink;
        
        private HtmlDiv mUIHelloadminadminplIhoPane;
        
        private HtmlHyperlink mUIHelloadminadminplHyperlink;
        
        private HtmlButton mUILogoutButton;
        
        private HtmlDiv mUIArtistsEmployeesSessPane;
        
        private HtmlDiv mUIRegisterLoginPane;
        
        private HtmlDiv mUISessionsHellouserusePane;
        
        private HtmlHyperlink mUIEmployeesHyperlink;
        
        private HtmlHyperlink mUIArtistsHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILoginWebAppDocument : HtmlDocument
    {
        
        public UILoginWebAppDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Log in - WebApp";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Account/Login";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost:44319/Account/Login";
            this.WindowTitles.Add("Log in - WebApp");
            #endregion
        }
        
        #region Properties
        public HtmlButton UILoginButton
        {
            get
            {
                if ((this.mUILoginButton == null))
                {
                    this.mUILoginButton = new HtmlButton(this);
                    #region Search Criteria
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Id] = "btnUserLogin";
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Log in";
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" id=\"btnUserLogin";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "2";
                    this.mUILoginButton.WindowTitles.Add("Log in - WebApp");
                    #endregion
                }
                return this.mUILoginButton;
            }
        }
        
        public HtmlCustom UITheEmailfieldisrequiCustom
        {
            get
            {
                if ((this.mUITheEmailfieldisrequiCustom == null))
                {
                    this.mUITheEmailfieldisrequiCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUITheEmailfieldisrequiCustom.SearchProperties["TagName"] = "LI";
                    this.mUITheEmailfieldisrequiCustom.SearchProperties["Id"] = null;
                    this.mUITheEmailfieldisrequiCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUITheEmailfieldisrequiCustom.FilterProperties["Class"] = null;
                    this.mUITheEmailfieldisrequiCustom.FilterProperties["ControlDefinition"] = null;
                    this.mUITheEmailfieldisrequiCustom.FilterProperties["InnerText"] = "The Email field is required.";
                    this.mUITheEmailfieldisrequiCustom.FilterProperties["TagInstance"] = "3";
                    this.mUITheEmailfieldisrequiCustom.WindowTitles.Add("Log in - WebApp");
                    #endregion
                }
                return this.mUITheEmailfieldisrequiCustom;
            }
        }
        
        public HtmlEdit UIEmailEdit
        {
            get
            {
                if ((this.mUIEmailEdit == null))
                {
                    this.mUIEmailEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Email";
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Email";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Email";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Email\" class=\"form-control\" id=\"Em";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUIEmailEdit.WindowTitles.Add("Log in - WebApp");
                    #endregion
                }
                return this.mUIEmailEdit;
            }
        }
        
        public HtmlEdit UIPasswordEdit
        {
            get
            {
                if ((this.mUIPasswordEdit == null))
                {
                    this.mUIPasswordEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Password";
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Password\" class=\"form-control\" id=";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUIPasswordEdit.WindowTitles.Add("Log in - WebApp");
                    #endregion
                }
                return this.mUIPasswordEdit;
            }
        }
        #endregion
        
        #region Fields
        private HtmlButton mUILoginButton;
        
        private HtmlCustom mUITheEmailfieldisrequiCustom;
        
        private HtmlEdit mUIEmailEdit;
        
        private HtmlEdit mUIPasswordEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEmployeesWebAppInterWindow : BrowserWindow
    {
        
        public UIEmployeesWebAppInterWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Employees - WebApp";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Employees - WebApp");
            this.WindowTitles.Add("Home Page - WebApp");
            this.WindowTitles.Add("Artists - WebApp");
            this.WindowTitles.Add("Index - WebApp");
            this.WindowTitles.Add("Create - WebApp");
            this.WindowTitles.Add("Edit - WebApp");
            this.WindowTitles.Add("Details - WebApp");
            this.WindowTitles.Add("Delete - WebApp");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIEmployeesWebAppDocument UIEmployeesWebAppDocument
        {
            get
            {
                if ((this.mUIEmployeesWebAppDocument == null))
                {
                    this.mUIEmployeesWebAppDocument = new UIEmployeesWebAppDocument(this);
                }
                return this.mUIEmployeesWebAppDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeesWebAppDocument mUIEmployeesWebAppDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEmployeesWebAppDocument : HtmlDocument
    {
        
        public UIEmployeesWebAppDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Employees - WebApp";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Employees";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost:44319/Employees";
            this.WindowTitles.Add("Employees - WebApp");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIEmployeesCreateNewFiPane
        {
            get
            {
                if ((this.mUIEmployeesCreateNewFiPane == null))
                {
                    this.mUIEmployeesCreateNewFiPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIEmployeesCreateNewFiPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIEmployeesCreateNewFiPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIEmployeesCreateNewFiPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Employees\r\n\r\nCreate New \r\n\r\n\r\n\r\nFind:   ";
                    this.mUIEmployeesCreateNewFiPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIEmployeesCreateNewFiPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "container body-content";
                    this.mUIEmployeesCreateNewFiPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"container body-content\"";
                    this.mUIEmployeesCreateNewFiPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "4";
                    this.mUIEmployeesCreateNewFiPane.WindowTitles.Add("Employees - WebApp");
                    #endregion
                }
                return this.mUIEmployeesCreateNewFiPane;
            }
        }
        
        public HtmlHyperlink UIMusicStudioHyperlink
        {
            get
            {
                if ((this.mUIMusicStudioHyperlink == null))
                {
                    this.mUIMusicStudioHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIMusicStudioHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIMusicStudioHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIMusicStudioHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIMusicStudioHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Music Studio";
                    this.mUIMusicStudioHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/";
                    this.mUIMusicStudioHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIMusicStudioHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost:44319/";
                    this.mUIMusicStudioHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "navbar-brand";
                    this.mUIMusicStudioHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"navbar-brand\" href=\"/\"";
                    this.mUIMusicStudioHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIMusicStudioHyperlink.WindowTitles.Add("Employees - WebApp");
                    #endregion
                }
                return this.mUIMusicStudioHyperlink;
            }
        }
        
        public HtmlHyperlink UISessionsHyperlink
        {
            get
            {
                if ((this.mUISessionsHyperlink == null))
                {
                    this.mUISessionsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUISessionsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "sessionSection";
                    this.mUISessionsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = "sections";
                    this.mUISessionsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUISessionsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.InnerText] = "Sessions";
                    this.mUISessionsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Sessions";
                    this.mUISessionsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUISessionsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost:44319/Sessions";
                    this.mUISessionsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUISessionsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "name=\"sections\" id=\"sessionSection\" href";
                    this.mUISessionsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "4";
                    this.mUISessionsHyperlink.WindowTitles.Add("Employees - WebApp");
                    #endregion
                }
                return this.mUISessionsHyperlink;
            }
        }
        
        public HtmlHyperlink UICreateNewHyperlink
        {
            get
            {
                if ((this.mUICreateNewHyperlink == null))
                {
                    this.mUICreateNewHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUICreateNewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUICreateNewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUICreateNewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUICreateNewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Create New";
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Employees/Create";
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost:44319/Employees/Create";
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "btn btn-info btn-sm";
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"btn btn-info btn-sm\" href=\"/Emplo";
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "6";
                    this.mUICreateNewHyperlink.WindowTitles.Add("Employees - WebApp");
                    #endregion
                }
                return this.mUICreateNewHyperlink;
            }
        }
        
        public HtmlHyperlink UIEditHyperlink
        {
            get
            {
                if ((this.mUIEditHyperlink == null))
                {
                    this.mUIEditHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIEditHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIEditHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIEditHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIEditHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Edit";
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Employees/Edit/1";
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost:44319/Employees/Edit/1";
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "btn btn-primary btn-xs";
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"btn btn-primary btn-xs\" href=\"/Em";
                    this.mUIEditHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "8";
                    this.mUIEditHyperlink.WindowTitles.Add("Employees - WebApp");
                    #endregion
                }
                return this.mUIEditHyperlink;
            }
        }
        
        public HtmlHyperlink UIDetailsHyperlink
        {
            get
            {
                if ((this.mUIDetailsHyperlink == null))
                {
                    this.mUIDetailsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIDetailsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIDetailsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIDetailsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIDetailsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Details";
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Employees/Details/1";
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost:44319/Employees/Details/1";
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "btn btn-info btn-xs";
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"btn btn-info btn-xs\" href=\"/Emplo";
                    this.mUIDetailsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "9";
                    this.mUIDetailsHyperlink.WindowTitles.Add("Employees - WebApp");
                    #endregion
                }
                return this.mUIDetailsHyperlink;
            }
        }
        
        public HtmlHyperlink UIDeleteHyperlink
        {
            get
            {
                if ((this.mUIDeleteHyperlink == null))
                {
                    this.mUIDeleteHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIDeleteHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIDeleteHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIDeleteHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIDeleteHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Delete";
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Employees/Delete/1";
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost:44319/Employees/Delete/1";
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "btn btn-danger btn-xs";
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"btn btn-danger btn-xs\" href=\"/Emp";
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "10";
                    this.mUIDeleteHyperlink.WindowTitles.Add("Employees - WebApp");
                    #endregion
                }
                return this.mUIDeleteHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIEmployeesCreateNewFiPane;
        
        private HtmlHyperlink mUIMusicStudioHyperlink;
        
        private HtmlHyperlink mUISessionsHyperlink;
        
        private HtmlHyperlink mUICreateNewHyperlink;
        
        private HtmlHyperlink mUIEditHyperlink;
        
        private HtmlHyperlink mUIDetailsHyperlink;
        
        private HtmlHyperlink mUIDeleteHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIHomePageWebAppInternWindow1 : BrowserWindow
    {
        
        public UIHomePageWebAppInternWindow1()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Home Page - WebApp";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Home Page - WebApp");
            this.WindowTitles.Add("Artists - WebApp");
            this.WindowTitles.Add("Employees - WebApp");
            this.WindowTitles.Add("Index - WebApp");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIArtistsWebAppDocument UIArtistsWebAppDocument
        {
            get
            {
                if ((this.mUIArtistsWebAppDocument == null))
                {
                    this.mUIArtistsWebAppDocument = new UIArtistsWebAppDocument(this);
                }
                return this.mUIArtistsWebAppDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIArtistsWebAppDocument mUIArtistsWebAppDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIArtistsWebAppDocument : HtmlDocument
    {
        
        public UIArtistsWebAppDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Artists - WebApp";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Artists";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost:44319/Artists";
            this.WindowTitles.Add("Artists - WebApp");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIEmployeesHyperlink
        {
            get
            {
                if ((this.mUIEmployeesHyperlink == null))
                {
                    this.mUIEmployeesHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIEmployeesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "employeeSection";
                    this.mUIEmployeesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = "sections";
                    this.mUIEmployeesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIEmployeesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.InnerText] = "Employees";
                    this.mUIEmployeesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Employees";
                    this.mUIEmployeesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIEmployeesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost:44319/Employees";
                    this.mUIEmployeesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIEmployeesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "name=\"sections\" id=\"employeeSection\" hre";
                    this.mUIEmployeesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "3";
                    this.mUIEmployeesHyperlink.WindowTitles.Add("Artists - WebApp");
                    #endregion
                }
                return this.mUIEmployeesHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIEmployeesHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIHomePageWebAppInternWindow2 : BrowserWindow
    {
        
        public UIHomePageWebAppInternWindow2()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Home Page - WebApp";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Home Page - WebApp");
            this.WindowTitles.Add("Artists - WebApp");
            this.WindowTitles.Add("Employees - WebApp");
            this.WindowTitles.Add("Index - WebApp");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIIndexWebAppDocument UIIndexWebAppDocument
        {
            get
            {
                if ((this.mUIIndexWebAppDocument == null))
                {
                    this.mUIIndexWebAppDocument = new UIIndexWebAppDocument(this);
                }
                return this.mUIIndexWebAppDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIIndexWebAppDocument mUIIndexWebAppDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIIndexWebAppDocument : HtmlDocument
    {
        
        public UIIndexWebAppDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Index - WebApp";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Sessions";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost:44319/Sessions";
            this.WindowTitles.Add("Index - WebApp");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIMusicStudioHyperlink
        {
            get
            {
                if ((this.mUIMusicStudioHyperlink == null))
                {
                    this.mUIMusicStudioHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIMusicStudioHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIMusicStudioHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIMusicStudioHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIMusicStudioHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Music Studio";
                    this.mUIMusicStudioHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/";
                    this.mUIMusicStudioHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIMusicStudioHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost:44319/";
                    this.mUIMusicStudioHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "navbar-brand";
                    this.mUIMusicStudioHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"navbar-brand\" href=\"/\"";
                    this.mUIMusicStudioHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIMusicStudioHyperlink.WindowTitles.Add("Index - WebApp");
                    #endregion
                }
                return this.mUIMusicStudioHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIMusicStudioHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEmployeesWebAppInterWindow1 : BrowserWindow
    {
        
        public UIEmployeesWebAppInterWindow1()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Employees - WebApp";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Employees - WebApp");
            this.WindowTitles.Add("Create - WebApp");
            this.WindowTitles.Add("Edit - WebApp");
            this.WindowTitles.Add("Details - WebApp");
            this.WindowTitles.Add("Delete - WebApp");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UICreateWebAppDocument UICreateWebAppDocument
        {
            get
            {
                if ((this.mUICreateWebAppDocument == null))
                {
                    this.mUICreateWebAppDocument = new UICreateWebAppDocument(this);
                }
                return this.mUICreateWebAppDocument;
            }
        }
        #endregion
        
        #region Fields
        private UICreateWebAppDocument mUICreateWebAppDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICreateWebAppDocument : HtmlDocument
    {
        
        public UICreateWebAppDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Create - WebApp";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Employees/Create";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost:44319/Employees/Create";
            this.WindowTitles.Add("Create - WebApp");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIBacktoListHyperlink
        {
            get
            {
                if ((this.mUIBacktoListHyperlink == null))
                {
                    this.mUIBacktoListHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIBacktoListHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIBacktoListHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIBacktoListHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIBacktoListHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Back to List";
                    this.mUIBacktoListHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Employees";
                    this.mUIBacktoListHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIBacktoListHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost:44319/Employees";
                    this.mUIBacktoListHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "btn btn-default";
                    this.mUIBacktoListHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" href=\"/Employees";
                    this.mUIBacktoListHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "6";
                    this.mUIBacktoListHyperlink.WindowTitles.Add("Create - WebApp");
                    #endregion
                }
                return this.mUIBacktoListHyperlink;
            }
        }
        
        public HtmlDiv UICreateEmployeeNameSuPane
        {
            get
            {
                if ((this.mUICreateEmployeeNameSuPane == null))
                {
                    this.mUICreateEmployeeNameSuPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUICreateEmployeeNameSuPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUICreateEmployeeNameSuPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUICreateEmployeeNameSuPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Create\r\n\r\nEmployee\r\n\r\n\r\n\r\n\r\n\r\nName  \r\nSu";
                    this.mUICreateEmployeeNameSuPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUICreateEmployeeNameSuPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "container body-content";
                    this.mUICreateEmployeeNameSuPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"container body-content\"";
                    this.mUICreateEmployeeNameSuPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "4";
                    this.mUICreateEmployeeNameSuPane.WindowTitles.Add("Create - WebApp");
                    #endregion
                }
                return this.mUICreateEmployeeNameSuPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIBacktoListHyperlink;
        
        private HtmlDiv mUICreateEmployeeNameSuPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEmployeesWebAppInterWindow2 : BrowserWindow
    {
        
        public UIEmployeesWebAppInterWindow2()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Employees - WebApp";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Employees - WebApp");
            this.WindowTitles.Add("Create - WebApp");
            this.WindowTitles.Add("Edit - WebApp");
            this.WindowTitles.Add("Details - WebApp");
            this.WindowTitles.Add("Delete - WebApp");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIEditWebAppDocument UIEditWebAppDocument
        {
            get
            {
                if ((this.mUIEditWebAppDocument == null))
                {
                    this.mUIEditWebAppDocument = new UIEditWebAppDocument(this);
                }
                return this.mUIEditWebAppDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIEditWebAppDocument mUIEditWebAppDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEditWebAppDocument : HtmlDocument
    {
        
        public UIEditWebAppDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Edit - WebApp";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Employees/Edit/1";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost:44319/Employees/Edit/1";
            this.WindowTitles.Add("Edit - WebApp");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIBacktoListHyperlink
        {
            get
            {
                if ((this.mUIBacktoListHyperlink == null))
                {
                    this.mUIBacktoListHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIBacktoListHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIBacktoListHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIBacktoListHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIBacktoListHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Back to List";
                    this.mUIBacktoListHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Employees";
                    this.mUIBacktoListHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIBacktoListHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost:44319/Employees";
                    this.mUIBacktoListHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "btn btn-default";
                    this.mUIBacktoListHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" href=\"/Employees";
                    this.mUIBacktoListHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "6";
                    this.mUIBacktoListHyperlink.WindowTitles.Add("Edit - WebApp");
                    #endregion
                }
                return this.mUIBacktoListHyperlink;
            }
        }
        
        public HtmlDiv UIEditEmployeeNameSurPane
        {
            get
            {
                if ((this.mUIEditEmployeeNameSurPane == null))
                {
                    this.mUIEditEmployeeNameSurPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIEditEmployeeNameSurPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIEditEmployeeNameSurPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIEditEmployeeNameSurPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Edit\r\n\r\nEmployee\r\n\r\n\r\n\r\n\r\n \r\nName  \r\nSur";
                    this.mUIEditEmployeeNameSurPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIEditEmployeeNameSurPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "container body-content";
                    this.mUIEditEmployeeNameSurPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"container body-content\"";
                    this.mUIEditEmployeeNameSurPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "4";
                    this.mUIEditEmployeeNameSurPane.WindowTitles.Add("Edit - WebApp");
                    #endregion
                }
                return this.mUIEditEmployeeNameSurPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIBacktoListHyperlink;
        
        private HtmlDiv mUIEditEmployeeNameSurPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEmployeesWebAppInterWindow3 : BrowserWindow
    {
        
        public UIEmployeesWebAppInterWindow3()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Employees - WebApp";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Employees - WebApp");
            this.WindowTitles.Add("Create - WebApp");
            this.WindowTitles.Add("Edit - WebApp");
            this.WindowTitles.Add("Details - WebApp");
            this.WindowTitles.Add("Delete - WebApp");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIDetailsWebAppDocument UIDetailsWebAppDocument
        {
            get
            {
                if ((this.mUIDetailsWebAppDocument == null))
                {
                    this.mUIDetailsWebAppDocument = new UIDetailsWebAppDocument(this);
                }
                return this.mUIDetailsWebAppDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIDetailsWebAppDocument mUIDetailsWebAppDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDetailsWebAppDocument : HtmlDocument
    {
        
        public UIDetailsWebAppDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Details - WebApp";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Employees/Details/1";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost:44319/Employees/Details/1";
            this.WindowTitles.Add("Details - WebApp");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIBacktoListHyperlink
        {
            get
            {
                if ((this.mUIBacktoListHyperlink == null))
                {
                    this.mUIBacktoListHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIBacktoListHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIBacktoListHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIBacktoListHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIBacktoListHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Back to List";
                    this.mUIBacktoListHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Employees";
                    this.mUIBacktoListHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIBacktoListHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost:44319/Employees";
                    this.mUIBacktoListHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "btn btn-default";
                    this.mUIBacktoListHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" href=\"/Employees";
                    this.mUIBacktoListHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "7";
                    this.mUIBacktoListHyperlink.WindowTitles.Add("Details - WebApp");
                    #endregion
                }
                return this.mUIBacktoListHyperlink;
            }
        }
        
        public HtmlDiv UIDetailsEmployeeNameKPane
        {
            get
            {
                if ((this.mUIDetailsEmployeeNameKPane == null))
                {
                    this.mUIDetailsEmployeeNameKPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIDetailsEmployeeNameKPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIDetailsEmployeeNameKPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIDetailsEmployeeNameKPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Details\r\n\r\n\r\nEmployee\r\n\r\nName Krystian S";
                    this.mUIDetailsEmployeeNameKPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIDetailsEmployeeNameKPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "container body-content";
                    this.mUIDetailsEmployeeNameKPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"container body-content\"";
                    this.mUIDetailsEmployeeNameKPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "4";
                    this.mUIDetailsEmployeeNameKPane.WindowTitles.Add("Details - WebApp");
                    #endregion
                }
                return this.mUIDetailsEmployeeNameKPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIBacktoListHyperlink;
        
        private HtmlDiv mUIDetailsEmployeeNameKPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEmployeesWebAppInterWindow4 : BrowserWindow
    {
        
        public UIEmployeesWebAppInterWindow4()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Employees - WebApp";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Employees - WebApp");
            this.WindowTitles.Add("Create - WebApp");
            this.WindowTitles.Add("Edit - WebApp");
            this.WindowTitles.Add("Details - WebApp");
            this.WindowTitles.Add("Delete - WebApp");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIDeleteWebAppDocument UIDeleteWebAppDocument
        {
            get
            {
                if ((this.mUIDeleteWebAppDocument == null))
                {
                    this.mUIDeleteWebAppDocument = new UIDeleteWebAppDocument(this);
                }
                return this.mUIDeleteWebAppDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIDeleteWebAppDocument mUIDeleteWebAppDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDeleteWebAppDocument : HtmlDocument
    {
        
        public UIDeleteWebAppDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Delete - WebApp";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Employees/Delete/1";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://localhost:44319/Employees/Delete/1";
            this.WindowTitles.Add("Delete - WebApp");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIBacktoListHyperlink
        {
            get
            {
                if ((this.mUIBacktoListHyperlink == null))
                {
                    this.mUIBacktoListHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIBacktoListHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIBacktoListHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIBacktoListHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIBacktoListHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Back to List";
                    this.mUIBacktoListHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Employees";
                    this.mUIBacktoListHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIBacktoListHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://localhost:44319/Employees";
                    this.mUIBacktoListHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "btn btn-default";
                    this.mUIBacktoListHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" href=\"/Employees";
                    this.mUIBacktoListHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "6";
                    this.mUIBacktoListHyperlink.WindowTitles.Add("Delete - WebApp");
                    #endregion
                }
                return this.mUIBacktoListHyperlink;
            }
        }
        
        public HtmlDiv UIDeleteAreyousureyouwPane
        {
            get
            {
                if ((this.mUIDeleteAreyousureyouwPane == null))
                {
                    this.mUIDeleteAreyousureyouwPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIDeleteAreyousureyouwPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIDeleteAreyousureyouwPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIDeleteAreyousureyouwPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Delete\r\n\r\nAre you sure you want to delet";
                    this.mUIDeleteAreyousureyouwPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIDeleteAreyousureyouwPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "container body-content";
                    this.mUIDeleteAreyousureyouwPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"container body-content\"";
                    this.mUIDeleteAreyousureyouwPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "4";
                    this.mUIDeleteAreyousureyouwPane.WindowTitles.Add("Delete - WebApp");
                    #endregion
                }
                return this.mUIDeleteAreyousureyouwPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIBacktoListHyperlink;
        
        private HtmlDiv mUIDeleteAreyousureyouwPane;
        #endregion
    }
}
